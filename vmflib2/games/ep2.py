"""
Helper classes for creating maps in any Source Engine game that uses ep2.fgd.
This file was auto-generated by import_fgd.py on 2018-06-20 16:16:58.858770.
"""

from vmflib2.vmf import *


class Demo1Entity(Entity):
    """
    Auto-generated from ep2.fgd, line 9.
    Demo 1 : An entity which shakes entities near it
    """
    def __init__(self, vmf_map, origin="0 0 0", amplitude="40", radius="500"):
        Entity.__init__(self, "demo1_entity", vmf_map)

        # Origin : This entity's location in 3D space.
        self.origin = origin
        # Amplitude : The magnitude of the force to apply to nearby physics objects
        self.amplitude = amplitude
        # Effect Radius : The radius around this entity in which to affect objects.
        self.radius = radius

        self.auto_properties.extend(["origin", "amplitude", "radius"])


class Demo2Entity(Entity):
    """
    Auto-generated from ep2.fgd, line 18.
    Demo 2 : An entity which shakes entities near it
    """
    def __init__(self, vmf_map, origin="0 0 0", amplitude="40", radius="150", effect_name="", effect2_name=""):
        Entity.__init__(self, "demo2_entity", vmf_map)

        # Origin : This entity's location in 3D space.
        self.origin = origin
        # Amplitude : The magnitude of the force to apply to nearby physics objects
        self.amplitude = amplitude
        # Effect Radius : The radius around this entity in which to affect objects.
        self.radius = radius
        # Particle System Name : Particle system to periodically emit at the entity origin
        self.effect_name = effect_name
        # Particle System Name #2 : 2nd Particle system to periodically emit at the entity origin
        self.effect2_name = effect2_name

        self.auto_properties.extend(["origin", "amplitude", "radius", "effect_name", "effect2_name"])


class Demo3Entity(Entity):
    """
    Auto-generated from ep2.fgd, line 29.
    Demo 3 : An entity which shakes entities near it
    """
    def __init__(self, vmf_map, origin="0 0 0", amplitude="40", radius="150", effect_name=""):
        Entity.__init__(self, "demo3_entity", vmf_map)

        # Origin : This entity's location in 3D space.
        self.origin = origin
        # Amplitude : The magnitude of the force to apply to nearby physics objects
        self.amplitude = amplitude
        # Effect Radius : The radius around this entity in which to affect objects.
        self.radius = radius
        # Particle System Name : Particle system to periodically emit on nearby objects
        self.effect_name = effect_name

        self.auto_properties.extend(["origin", "amplitude", "radius", "effect_name"])


class Demo4Entity(Entity):
    """
    Auto-generated from ep2.fgd, line 39.
    Demo 4 : An entity which shakes entities near it
    """
    def __init__(self, vmf_map, targetname="", amplitude="40", radius="150"):
        Entity.__init__(self, "demo4_entity", vmf_map)

        # Name : The name that other entities refer to this entity by.
        self.targetname = targetname

        # Amplitude : The magnitude of the force to apply to nearby physics objects
        self.amplitude = amplitude
        # Effect Radius : The radius around this entity in which to affect objects.
        self.radius = radius

        self.auto_properties.extend(["targetname", "amplitude", "radius"])


class Demo5Entity(Entity):
    """
    Auto-generated from ep2.fgd, line 50.
    Demo 5 : An entity which shakes entities near it
    """
    def __init__(self, vmf_map, origin="0 0 0", targetname="", model="", skin=0, modelscale="1.0", disableshadows=0, amplitude="40", radius="150", effect_name=""):
        Entity.__init__(self, "demo5_entity", vmf_map)

        # Origin : This entity's location in 3D space.
        self.origin = origin
        # Name : The name that other entities refer to this entity by.
        self.targetname = targetname

        # World Model : 
        self.model = model
        # Skin : Some models have multiple versions of their textures, called skins. Set this to a number other than 0 to use that skin instead of the default.
        self.skin = skin
        # Model Scale : A multiplier for the size of the model.
        self.modelscale = modelscale
        # Disable Shadows : Used to disable dynamic shadows on this entity.
        self.disableshadows = disableshadows

        # Amplitude : The magnitude of the force to apply to nearby physics objects
        self.amplitude = amplitude
        # Effect Radius : The radius around this entity in which to affect objects.
        self.radius = radius
        # Particle System Name : Particle system to periodically emit on nearby objects
        self.effect_name = effect_name

        self.auto_properties.extend(["origin", "targetname", "model", "skin", "modelscale", "disableshadows", "amplitude", "radius", "effect_name"])


